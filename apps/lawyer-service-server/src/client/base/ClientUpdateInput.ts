/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingUpdateManyWithoutClientsInput } from "./BookingUpdateManyWithoutClientsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { CaseModelUpdateManyWithoutClientsInput } from "./CaseModelUpdateManyWithoutClientsInput";
import { PaymentUpdateManyWithoutClientsInput } from "./PaymentUpdateManyWithoutClientsInput";
import { RatingUpdateManyWithoutClientsInput } from "./RatingUpdateManyWithoutClientsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ClientUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => CaseModelUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => CaseModelUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => CaseModelUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  cases?: CaseModelUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactInformation?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { ClientUpdateInput as ClientUpdateInput };
