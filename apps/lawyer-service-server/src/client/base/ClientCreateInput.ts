/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingCreateNestedManyWithoutClientsInput } from "./BookingCreateNestedManyWithoutClientsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { CaseModelCreateNestedManyWithoutClientsInput } from "./CaseModelCreateNestedManyWithoutClientsInput";
import { InvoiceCreateNestedManyWithoutClientsInput } from "./InvoiceCreateNestedManyWithoutClientsInput";
import { PaymentCreateNestedManyWithoutClientsInput } from "./PaymentCreateNestedManyWithoutClientsInput";
import { RatingCreateNestedManyWithoutClientsInput } from "./RatingCreateNestedManyWithoutClientsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ClientCreateInput {
  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => CaseModelCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => CaseModelCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => CaseModelCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  cases?: CaseModelCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactInformation?: string | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => InvoiceCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  invoices?: InvoiceCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => RatingCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => RatingCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => RatingCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  ratings?: RatingCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { ClientCreateInput as ClientCreateInput };
